globalThis.CKEditorConfig = {
  configs: {
    toolbar: {
      // styles:``,
      // field:{},
      // editorConfig:{}
    },
    custom: {
      /* Styles for this specific editor.
            This will be passed into the editor's parent container. */

      styles: `
                .ck.ck-content.ck-editor__editable.ck-rounded-corners.ck-editor__editable_inline.ck-blurred{
                  min-height: 400px;
                  max-height: 400px;
                }
                .ck.ck-content.ck-editor__editable.ck-rounded-corners.ck-editor__editable_inline.ck-focused{
                  min-height: 400px;
                  max-height: 1700px;
                }
                .ck-content .image > figcaption, 
                .ck-content .table > figcaption {
                    border-radius: 5px;
                    margin-top: 5px;
                    background-color: inherit;
                    color: inherit;
                    position: relative;
                    font-size: 0.9em;
                }
                .ck-content .image > figcaption::before,
                .ck-content .table > figcaption::before {
                    position: absolute;
                    content: ' ';
                    width: 100%;
                    height: 100%;
                    top: 0;
                    left: 0;
                    background-color: #00000020;
                    border-radius: 5px;
                }
                .ck-content .table {
                    width: 100%;
                }
                .ck-editor .ck-editor__top {
                    visibility: hidden;
                }
                .ck-editor:focus-within .ck-editor__top {
                    visibility: visible;
                }
            `,

      /* Custom field option */
      field: {
        key: "custom",
        value: "custom",
        metadatas: {
          intlLabel: {
            id: "ckeditor5.preset.custom.label",
            defaultMessage: "Custom version",
          },
        },
      },
      /* CKEditor configuration */
      editorConfig: {
        /* All available built-in plugins
                you can find in admin/src/components/Input/CKEditor/configs/base.js */
        plugins: [
          CKEditor5.alignment.Alignment,
          CKEditor5.autoformat.Autoformat,
          CKEditor5.image.AutoImage,
          CKEditor5.link.AutoLink,
          CKEditor5.autosave.Autosave,
          CKEditor5.ui.BalloonToolbar,
          CKEditor5.blockQuote.BlockQuote,
          CKEditor5.ui.BlockToolbar,
          CKEditor5.basicStyles.Bold,
          // CKEditor5.basicStyles.Code,
          // CKEditor5.codeBlock.CodeBlock,
          CKEditor5.htmlSupport.DataFilter,
          CKEditor5.htmlSupport.DataSchema,
          // CKEditor5.list.DocumentList,
          // CKEditor5.list.DocumentListProperties,
          CKEditor5.essentials.Essentials,
          CKEditor5.findAndReplace.FindAndReplace,
          // CKEditor5.fontWithPicker.FontBackgroundColor,
          // CKEditor5.fontWithPicker.FontColor,
          // CKEditor5.fontWithPicker.FontFamily,
          // CKEditor5.fontWithPicker.FontSize,
          CKEditor5.htmlSupport.GeneralHtmlSupport,
          CKEditor5.heading.Heading,
          CKEditor5.heading.HeadingButtonsUI,
          // CKEditor5.highlight.Highlight,
          CKEditor5.horizontalLine.HorizontalLine,
          //   CKEditor5.htmlSupport.HtmlComment,
          //   CKEditor5.htmlEmbed.HtmlEmbed,
          CKEditor5.image.Image,
          CKEditor5.image.ImageCaption,
          CKEditor5.image.ImageInsert,
          CKEditor5.image.ImageResize,
          CKEditor5.image.ImageStyle,
          CKEditor5.image.ImageToolbar,
          CKEditor5.image.ImageUpload,
          CKEditor5.indent.Indent,
          CKEditor5.indent.IndentBlock,
          CKEditor5.basicStyles.Italic,
          CKEditor5.link.Link,
          CKEditor5.link.LinkImage,
          CKEditor5.list.List,
          CKEditor5.list.ListProperties,
          CKEditor5.mediaEmbed.MediaEmbed,
          CKEditor5.mediaEmbed.MediaEmbedToolbar,
          // CKEditor5.mention.Mention,
          // CKEditor5.pageBreak.PageBreak,
          CKEditor5.paragraph.Paragraph,
          CKEditor5.paragraph.ParagraphButtonUI,
          CKEditor5.pasteFromOffice.PasteFromOffice,
          CKEditor5.removeFormat.RemoveFormat,
          CKEditor5.sourceEditing.SourceEditing,
          CKEditor5.specialCharacters.SpecialCharacters,
          // CKEditor5.specialCharacters.SpecialCharactersLatin,
          // CKEditor5.specialCharacters.SpecialCharactersMathematical,
          // CKEditor5.specialCharacters.SpecialCharactersText,
          // CKEditor5.specialCharacters.SpecialCharactersArrows,
          // CKEditor5.specialCharacters.SpecialCharactersCurrency,
          CKEditor5.specialCharacters.SpecialCharactersEssentials,
          CKEditor5.strapiPlugins.StrapiMediaLib,
          CKEditor5.strapiPlugins.StrapiUploadAdapter,
          CKEditor5.basicStyles.Strikethrough,
          CKEditor5.style.Style,
          CKEditor5.basicStyles.Subscript,
          CKEditor5.basicStyles.Superscript,
          CKEditor5.table.Table,
          CKEditor5.table.TableCaption,
          CKEditor5.table.TableCellProperties,
          CKEditor5.table.TableColumnResize,
          CKEditor5.table.TableProperties,
          CKEditor5.table.TableToolbar,
          // CKEditor5.language.TextPartLanguage,
          CKEditor5.typing.TextTransformation,
          // CKEditor5.list.TodoList,
          CKEditor5.basicStyles.Underline,
          CKEditor5.wordCount.WordCount,
        ],

        /* By default, for plugin's UI will use
                  the language defined in this file
                  or the preferred language from strapi's user config
                  and 'en' as a fallback.
                  language.ui -> preferred language -> 'en' */

        /* For content it will use language based on i18n (if! ignorei18n)
                  or language.content defined here
                  and it will use UI language as a fallback.
                  ignorei18n ? language.content : i18n; -> language.ui */

        language: {
          // ignorei18n: true,
          // ui:'he',
          // content:'he'
        },
        toolbar: {
          items: [
            {
              label: " ",
              tooltip: null,
              icon: "paragraph",
              items: [
                "paragraph",
                "heading1",
                "heading2",
                "heading3",
                "blockquote",
              ],
            },
            {
              label: " ",
              tooltip: null,
              icon: "bold",
              items: [
                "bold",
                "italic",
                "underline",
                "strikethrough",
                "superscript",
                "subscript",
              ],
            },
            "|",
            "alignment",
            "outdent",
            "indent",
            "|",
            "strapiMediaLib",
            "insertTable",
            {
              label: " ",
              tooltip: "More tools",
              icon: "threeVerticalDots",
              items: [
                "bulletedList",
                "numberedList",
                "|",
                "findAndReplace",
                "sourceEditing",
                "|",
                "specialCharacters",
                "horizontalLine",
              ],
            },
          ],
          shouldNotGroupWhenFull: true,
        },
        balloonToolbar: {
          items: [
            "bold",
            "italic",
            "removeFormat",
            "link",
            {
              label: " ",
              tooltip: null,
              icon: "paragraph",
              items: ["paragraph", "heading1", "heading2", "heading3"],
            },
          ],
          shouldNotGroupWhenFull: true,
        },
        image: {
          toolbar: [
            "imageStyle:wrapText",
            "imageStyle:breakText",
            "imageResize",
            "|",
            "linkImage",
            "toggleImageCaption",
            "imageTextAlternative",
          ],
        },
        table: {
          contentToolbar: [
            "tableColumn",
            "tableRow",
            "mergeTableCells",
            "|",
            "tableProperties",
            "tableCellProperties",
            "|",
            "toggleTableCaption",
          ],
        },
        typing: {
          transformations: {
            extra: [
              {
                from: "KMVS",
                to: "Kutch Mahila Vikas Sangathan",
              },
              {
                from: /(\. )([a-z])$/,
                to: (matches) => [null, matches[1].toUpperCase()],
              },
            ],
          },
        },
      },
    },
  },

  /* Here you can customize the plugin's theme.
    This will be passed as "createGlobalStyle". */
  theme: {
    // common:``,
    // light:``,
    // dark:``,
    // additional:``
  },
};
